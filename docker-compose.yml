version: '3.6'


services:

  djangovue-app:
    container_name: djangovue-app
    restart: always
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    env_file: ./docker/django/app.env
    volumes:
      - .:/data/django
      - ./public:/data/public
      - shared_socket:/var/run/shared_socket
    command: >
      sh -c "/usr/local/bin/gunicorn --reload --workers 3 \
            --bind unix:/var/run/shared_socket/app.sock project.wsgi:application \
            --error-logfile /data/django/docker/django/logs/gunicorn-error.log \
            --access-logfile /data/django/docker/django/logs/gunicorn-access.log"
    tty: true
    networks:
      - nginx_proxy

  djangovue-nginx:
    container_name: djangoproject-nginx
    image: nginx
    restart: always
    ports:
      - 8083:80
    environment:
      - VIRTUAL_HOST=djangovue.oleksii-velychko.pro
    volumes:
      - ./public:/data/public
      - ./docker/nginx/logs:/data/logs
      - ./docker/nginx/virtualhost.conf:/etc/nginx/conf.d/default.conf
      - shared_socket:/var/run/shared_socket
    networks:
      - nginx_proxy

  djangovue-postgres:
    container_name: djangoproject-postgres
    restart: always
    image: postgres:latest
    volumes:
      - ./docker/postgresql/docker-entrypoint-initdb.d/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
      - ./docker/postgresql/db_data:/var/lib/postgresql/data
    env_file: ./docker/django/app.env
    ports:
      - 5434:5432
    networks:
      - nginx_proxy


volumes:
  shared_socket:


networks:
  nginx_proxy:
    external: true
