"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""
import os
from datetime import timedelta


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'webpack_loader',
    'project.authjwt',
    'project.spa',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# If True, the whitelist will not be used and all origins will be accepted. Defaults to False.
# Allow hosts only from whitelist
CORS_ORIGIN_ALLOW_ALL = False
# If True, cookies will be allowed to be included in cross-site HTTP requests. Defaults to False.
CORS_ALLOW_CREDENTIALS = True

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'project.spa.pagination.DefaultResultSetPagination',
    'PAGE_SIZE': 12
}

AUTH_USER_MODEL = 'authjwt.User'

JWT_AUTH = {
    'JWT_VERIFY': True,  # It will raise a jwt.DecodeError if the secret is wrong.
    'JWT_ALLOW_REFRESH': True,
    'JWT_VERIFY_EXPIRATION': True,  # Tokens will expire after a period of time (default is five minutes).
    'JWT_EXPIRATION_DELTA': timedelta(hours=24),
    'JWT_REFRESH_EXPIRATION_DELTA': timedelta(days=7),
    'JWT_AUTH_HEADER_PREFIX': 'Bearer',  # That is required to be sent together with the token (default is JWT).
}

EMAIL_VERIFIER_API_KEY = os.environ.get('EMAIL_VERIFIER_API_KEY', None)

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'


WEBPACK_LOADER = {
    'TODO-SPA': {
        'BUNDLE_DIR_NAME': '',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats.json'),
        'IGNORE': ['.+\.hot-update.json', '.+\.hot-update.js', '.+\.map']
    },
}

INTERNAL_IPS = (
    '127.0.0.1',
)

if os.getenv('IS_HEROKU', 0) == 1:

    import dj_database_url
    import django_heroku

    # Activate Django-Heroku.
    django_heroku.settings(locals())

    DEBUG = False
    SITE_ID = 2

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = os.getenv('APP_DJANGO_VUE_SECRET_KEY')

    DATABASES = {
        'default': dj_database_url.config(default=os.environ['DATABASE_URL'])
    }

    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

    ALLOWED_HOSTS = ['alex-django-vue.herokuapp.com']
    CORS_ORIGIN_WHITELIST = ('https://alex-django-vue.herokuapp.com',)
else:
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True

    SECRET_KEY = '**************************************************'
    SITE_ID = 1

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'spa.sqlite3'),
        }
    }

    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

    ALLOWED_HOSTS = ['127.0.0.1']
    CORS_ORIGIN_WHITELIST = ('http://127.0.0.1', )

    WEBPACK_LOADER['TODO-SPA']['STATS_FILE'] = os.path.join(BASE_DIR, 'project/spa/static/spa/webpack-stats.json')
